package com.kr.chap01_abstraction.run;

import com.kr.chap01_abstraction.model.vo.Student;

public class AbstractionRun {
	
public static void main(String[] args) {
		
		/*
		 * 1. 객체 지향 언어 :" 객체 " 를 "지향" 하는 언어로 " 객체 중심"으로 돌아간다고 생각하면 됨.
		 * 
		 * 지양 => 좋지 않음
		 * 지향 => 좋음 ( 추구 한다 .)
		 * 
		 * 2.객체란 : 현실세계에 독랍적으로 존재 (목적이 있고 가치가 있고 의미가 있는) 하는 모든것들을 의미 (유형, 무형 ,개념,...)
		 *          현실세계에서는 객체들 간의 상호작용으로 돌아감 (내가 물을 먹는다) 
		 *  3.객체 지향 프로그래밍: 현실세계의 객체들간의 상호작용 
		 *   프로그래밍 을 통해 가상세계로 구현하는 과정 (내가 쇼핑물에서 로그인을 한다)
		 *   4. 구현하고자 하는  프로그램상의 필요한 객체들을 만들기 위해서 (즉 , 생성하기 위해서 )
		 *    : 클래스라는 틀을 먼저 만들어야됨 !! (클래스란? 각 객체들의 담아낼 그릇 같은 존재 ) => 이름 ,나이,주소 ,휴대폰 번호 등등 을 담을 수있는 그릇
		 *    >> 어떻게 만드는 걸까?    추상화 + 캡슐화 접목해서 만들어야됨!!
		 * 
		 * 5. 추상화 과정 
		 * 1) 내가 구현하고자 하는 프로그램 에서 필요한 객체들을 생각해 볼것 => 쇼핑물
		 * 2) 그 객체들이 가지는 공통적인 속성 , 기능들을 모두 추출=> 이름,나이 ,주소,휴대폰번호 ,MBTI,혈액형 ..
		 * 3) 추출한 것들을 가지고 내가 구현하고자 했던 프로그램의 "실직적인 목적" 에 맞춰 불필요한 속성 , 기능들을 제거할것 => MBTI , 혈액형
		 * 4) 그렇게 최종적으로 추려진 속성들을 어떤 자료형으로 , 어떤 변수명으로 사용할건지 생각
		 * 
		 * Ex) 학생관리 프로그램
		 *      1) 학생관련 객체 (김봉석 학생 ,장희수 학생 ....)
		 *      2)공통적인 속성 및 기능들 (이름 , 나이 , 주소 , 전화번호 , 키 ,몸무게 , 달리기속도,학년 , 반 , 국어점수,영어점수,수학점수 ,머리색깔, 발사이즈 ,밥먹는다 ,잠잔다 , ....)
		 *      3)학생 " 인적사항" 을 관리하는 프로그램 이라고 한다면 : 이름 ,나이 ,주소 , 전화번호,학년, 반 
		 *      학생 "성적" 을 관리하는 프로그램 이라고 한다면 : 이름 , 학년 , 반 , 국어점수, 수학점수, 영어 점수 
		 *      학생 "건강" 을 관리하는 프로그램 이라고 한다면 ㅣ 이름 , 학년 , 반 ,키 , 몸무게 , 달리기 속도, 먹는다, 잠잔다 
		 *     결국 추려진게 "이름 ,나이 ,키" 라는 가정하에 
		 *     4)이름 : Sting name; 
		 *       나이 : int age;
		 *       키: double height;
		 * 
		 * 6. 위에 선정된 것들을 가지고 본격적인 프로그래밍을 할껀대 ...
		 *  1) " 변수 " 만으로 프로그래밍을 한다면 ??
		 *  * 변수 - 하나의 자료형에 하나의 값만을 대입할 수 있다.
		 *  김봉석이라는 학생 객체를 만들어 내기 위해서 --> String name1 = "김봉석 "; int age1= 19;double heigt=162.3;
		 *  장희수라는 학생 객체를 만들어 내기 위해서 -- > String name2 = "장희수 "; int age2 = 20; double heigt =170.3;
		 *  .....등등의 수백명에 해당하는 학생들을 만들어야함
		 *  어떤 문제가 발생 ? => 수백명의 해당하는 학생들을 만들때 => 수천개의 변수가 만들어짐!!
		 *  
		 *  2) "배열" 로 프로그래밍을 한다면?
		 *  *배열 - 하나의 자료형 에 여러개의 값들을 보관할수 있음
		 *  학생들의 이름들을 보관하는 string[] name ={" 김봉석 ", "장희수",...}
		 *  학생들의 나이를 보관하는 int[] age = {20,21,...}
		 *  학생들의 키를 보관하는 double[] height = {162.3,170.3,....}
		 *  
		 *  어떤문제가 발생?
		 *  => 기존의 학생 정보를 지워야할때 뒤의 정보들을 앞으로 땡기는 과정을 진행해야 하는 데 
		 *  잘못땡기면 정보가 틀어진다..
		 *  =>새로운 학생이 전학오면 ?배열 다시 만들어야함 +복사해야함 
		 *  3)그래서 나온 개념이 구조체!!
		 *  *구조체 - 여러개의 자료형의 여러개의 값들을 보관할수 있음 
		 *  
		 *  String 값도 보관하고 ,int 값도 보관하고 ,double 값도 같이 보관할수 있도록 나만의 배열같은 자료형을 만들자 !! 그게 바로 클래스 !!
		 *  Student 라는 클래스 로 만들꺼임 !! => 객체의 정보를 보관할 그릇과도같은 이런 클래스들을 => model.vo
		 * 
		 */
		
		
	     // 자바에서 객체를 만들기 new 라는 키워드를 통해서 Heap영역에생성먼저 해야됨!!! (공간할당 )	
		 Student kim = new Student();// 객체 생성 구문 
		 // 주소값을 담고 있음!! 기본 자료형이 아니기 때문에 !
		 
		 //여기까지는 Heap 영역에 할당된 공간에 JvM의 초기값들이 세팅 되어있을때
		 
		 // 각 영역에 "직접 접근" 해서 내가원하는 값 대입 => public 이라서 개방돼있음
		 // arr [0] =1;
		 
		 
		kim.name = "김봉석";
		 kim.age =20;
		 kim.heigeht =160.3;
		 
		System.out.println(kim);//자료형 + @ +16진수 주소값
	  System.out.println(kim.name+ "님의 나이는 "+kim.age + "살이고, 키는  " + kim.heigeht +"cm 입니다.");
   // 직접 접근을 통해 값 가져옴 
	  // 장희수 학생 객체 만들기 => 장희수  ,21,173.4
	  
	  
	  Student jang =new Student();
	   jang.name ="장희수";
	   jang.age =21;
	   jang.heigeht =173.4;
        	  
	  System.out.println(jang.name + "님의 나이는 " + jang.age + "살이고 , 키는 " + jang.heigeht + "cm 입니다.");
	  
	  
	  /*
	   * 필드를 public 접근 제한자로 작성
	   * => 필드에 직접적으로 접근해서 값을 대입하거나 값을 가져올수 있음
	   * => 외부에서 함부로 값을 변질시키거나 , 조회권한이 없는 사람이 가져올수 있는 문제발생 !!
	   * >> 캡슐화 작업을 할꺼임!!
	   * 
	   * 
	   */

	}

}
